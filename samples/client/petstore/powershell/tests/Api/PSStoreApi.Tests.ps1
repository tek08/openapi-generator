#
# OpenAPI Petstore
# This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
# Version: 1.0.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<<<<<<< HEAD
Describe -tag 'PSPetstore' -name 'PSPSStoreApi' {
    Context 'Remove-PSOrder' {
        It 'Test Remove-PSOrder' {
            #$TestResult = Invoke-PetApiGetPetById -OrderId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
=======
Describe -tag 'PSPetstore' -name 'PSStoreApi' {
    Context 'Remove-PSOrder' {
        It 'Test Remove-PSOrder' {
            #$TestResult = Invoke-PetApiGetPetById -OrderId "TEST_VALUE"
            #$TestResult | Should BeOfType TODO
            #$TestResult.property | Should Be 0
>>>>>>> ooof
        }
    }

    Context 'Get-PSInventory' {
        It 'Test Get-PSInventory' {
            #$TestResult = Invoke-PetApiGetPetById
<<<<<<< HEAD
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
=======
            #$TestResult | Should BeOfType TODO
            #$TestResult.property | Should Be 0
>>>>>>> ooof
        }
    }

    Context 'Get-PSOrderById' {
        It 'Test Get-PSOrderById' {
            #$TestResult = Invoke-PetApiGetPetById -OrderId "TEST_VALUE"
<<<<<<< HEAD
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
=======
            #$TestResult | Should BeOfType TODO
            #$TestResult.property | Should Be 0
>>>>>>> ooof
        }
    }

    Context 'Invoke-PSPlaceOrder' {
        It 'Test Invoke-PSPlaceOrder' {
            #$TestResult = Invoke-PetApiGetPetById -Order "TEST_VALUE"
<<<<<<< HEAD
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
=======
            #$TestResult | Should BeOfType TODO
            #$TestResult.property | Should Be 0
>>>>>>> ooof
        }
    }

}

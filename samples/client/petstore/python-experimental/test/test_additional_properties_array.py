# coding: utf-8

"""
    OpenAPI Petstore

    This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\  # noqa: E501

<<<<<<< HEAD
    The version of the OpenAPI document: 1.0.0
=======
    OpenAPI spec version: 1.0.0
>>>>>>> ooof
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import
<<<<<<< HEAD
import sys
import unittest

import petstore_api
from petstore_api.model.additional_properties_array import AdditionalPropertiesArray
=======

import unittest

import petstore_api
from petstore_api.models.additional_properties_array import AdditionalPropertiesArray  # noqa: E501
from petstore_api.rest import ApiException
from petstore_api.exceptions import ApiTypeError

import datetime
>>>>>>> ooof


class TestAdditionalPropertiesArray(unittest.TestCase):
    """AdditionalPropertiesArray unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testAdditionalPropertiesArray(self):
        """Test AdditionalPropertiesArray"""
        # can make model without additional properties
        model = AdditionalPropertiesArray()

        # can make one with additional properties
<<<<<<< HEAD
        import datetime
=======
>>>>>>> ooof
        some_val = []
        model = AdditionalPropertiesArray(some_key=some_val)
        assert model['some_key'] == some_val
        some_val = [True, datetime.date(1970,1,1), datetime.datetime(1970,1,1), {}, 3.1, 1, [], 'hello']
        model = AdditionalPropertiesArray(some_key=some_val)
        assert model['some_key'] == some_val

        # type checking works on additional properties
<<<<<<< HEAD
        with self.assertRaises(petstore_api.ApiTypeError) as exc:
=======
        with self.assertRaises(ApiTypeError) as exc:
>>>>>>> ooof
            model = AdditionalPropertiesArray(some_key='some string')


if __name__ == '__main__':
    unittest.main()

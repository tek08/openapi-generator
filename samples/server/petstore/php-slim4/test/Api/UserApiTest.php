<?php

/**
<<<<<<< HEAD
 * OpenAPI Petstore
 * PHP version 7.2
 *
 * @package OpenAPIServer
=======
 * UserApiTest
 *
 * PHP version 7.1
 *
 * @package OpenAPIServer\Api
>>>>>>> ooof
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
<<<<<<< HEAD
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
=======
 * OpenAPI Petstore
 *
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
>>>>>>> ooof
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the endpoint.
 */
namespace OpenAPIServer\Api;

use PHPUnit\Framework\TestCase;
use OpenAPIServer\Api\UserApi;

/**
 * UserApiTest Class Doc Comment
 *
 * @package OpenAPIServer\Api
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 *
 * @coversDefaultClass \OpenAPIServer\Api\UserApi
 */
class UserApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
<<<<<<< HEAD
    public static function setUpBeforeClass(): void
=======
    public static function setUpBeforeClass()
>>>>>>> ooof
    {
    }

    /**
     * Setup before running each test case
     */
<<<<<<< HEAD
    public function setUp(): void
=======
    public function setUp()
>>>>>>> ooof
    {
    }

    /**
     * Clean up after running each test case
     */
<<<<<<< HEAD
    public function tearDown(): void
=======
    public function tearDown()
>>>>>>> ooof
    {
    }

    /**
     * Clean up after running all test cases
     */
<<<<<<< HEAD
    public static function tearDownAfterClass(): void
=======
    public static function tearDownAfterClass()
>>>>>>> ooof
    {
    }

    /**
     * Test case for createUser
     *
     * Create user.
     *
     * @covers ::createUser
     */
    public function testCreateUser()
    {
<<<<<<< HEAD
        $this->markTestIncomplete(
            'Test of "createUser" method has not been implemented yet.'
        );
=======
>>>>>>> ooof
    }

    /**
     * Test case for createUsersWithArrayInput
     *
     * Creates list of users with given input array.
     *
     * @covers ::createUsersWithArrayInput
     */
    public function testCreateUsersWithArrayInput()
    {
<<<<<<< HEAD
        $this->markTestIncomplete(
            'Test of "createUsersWithArrayInput" method has not been implemented yet.'
        );
=======
>>>>>>> ooof
    }

    /**
     * Test case for createUsersWithListInput
     *
     * Creates list of users with given input array.
     *
     * @covers ::createUsersWithListInput
     */
    public function testCreateUsersWithListInput()
    {
<<<<<<< HEAD
        $this->markTestIncomplete(
            'Test of "createUsersWithListInput" method has not been implemented yet.'
        );
=======
>>>>>>> ooof
    }

    /**
     * Test case for deleteUser
     *
     * Delete user.
     *
     * @covers ::deleteUser
     */
    public function testDeleteUser()
    {
<<<<<<< HEAD
        $this->markTestIncomplete(
            'Test of "deleteUser" method has not been implemented yet.'
        );
=======
>>>>>>> ooof
    }

    /**
     * Test case for getUserByName
     *
     * Get user by user name.
     *
     * @covers ::getUserByName
     */
    public function testGetUserByName()
    {
<<<<<<< HEAD
        $this->markTestIncomplete(
            'Test of "getUserByName" method has not been implemented yet.'
        );
=======
>>>>>>> ooof
    }

    /**
     * Test case for loginUser
     *
     * Logs user into the system.
     *
     * @covers ::loginUser
     */
    public function testLoginUser()
    {
<<<<<<< HEAD
        $this->markTestIncomplete(
            'Test of "loginUser" method has not been implemented yet.'
        );
=======
>>>>>>> ooof
    }

    /**
     * Test case for logoutUser
     *
     * Logs out current logged in user session.
     *
     * @covers ::logoutUser
     */
    public function testLogoutUser()
    {
<<<<<<< HEAD
        $this->markTestIncomplete(
            'Test of "logoutUser" method has not been implemented yet.'
        );
=======
>>>>>>> ooof
    }

    /**
     * Test case for updateUser
     *
     * Updated user.
     *
     * @covers ::updateUser
     */
    public function testUpdateUser()
    {
<<<<<<< HEAD
        $this->markTestIncomplete(
            'Test of "updateUser" method has not been implemented yet.'
        );
=======
>>>>>>> ooof
    }
}
